diff --git a/core/flash.cpp b/core/flash.cpp
index 59e5fe9..045288c 100644
--- a/core/flash.cpp
+++ b/core/flash.cpp
@@ -11,9 +11,12 @@
 #include "cpu.h"
 #include "os/os.h"
 
+extern struct arm_state arm;
 nand_state nand;
 static uint8_t *nand_data = NULL;
 
+uint32_t lastreadpc = 1;
+
 static const struct nand_metrics chips[] = {
     { 0x20, 0x35, 0x210, 5, 0x10000 }, // ST Micro NAND256R3A
     { 0xEC, 0xA1, 0x840, 6, 0x10000 }, // Samsung 1 GBit
@@ -156,6 +159,7 @@ uint8_t nand_read_data_byte() {
     }
 }
 uint32_t nand_read_data_word() {
+	int calcd ;
     //putchar('R');
     switch (nand.state) {
         case 0x00:
@@ -163,7 +167,12 @@ uint32_t nand_read_data_word() {
                 //warn("NAND read past end of page");
                 return 0;
             }
-            return *(uint32_t *)&nand_data[nand.nand_row * nand.metrics.page_size + (nand.nand_col += 4) - 4];
+		calcd= nand.nand_row * nand.metrics.page_size + (nand.nand_col += 4) - 4;
+		if(lastreadpc != arm.reg[15] && calcd < 0x1000) {
+			printf("read low nand 0x%X at pc 0x%08X\n",calcd,arm.reg[15]);
+			lastreadpc = arm.reg[15];
+		}
+            return *(uint32_t *)&nand_data[calcd];
         case 0x70: return 0x40 | (nand.nand_writable << 7); // Status register
         case 0x90: nand.state = 0xFF; return nand.metrics.chip_model << 8 | nand.metrics.chip_manuf;
         default:
-- 
2.11.0 (Apple Git-81)

